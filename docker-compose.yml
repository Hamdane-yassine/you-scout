---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafkaStream

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafkaStream

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: you-scout
      POSTGRES_PASSWORD: 9wSMIG4PtuV9RUczvLfF1RG8F
      PGDATA: /data/postgres
    volumes:
      - postgresVolume:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadminVolume:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/you-scout-project
    volumes:
      - neo4jDbVol:/data
    networks:
      - neo4jNetwork

  api-gateway:
    image: registry.gitlab.com/hamdane10/you-scout/api-gateway:3.9
    container_name: api-gateway
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  eureka-server:
    image: registry.gitlab.com/hamdane10/you-scout/service-discovery:1.0
    container_name: eureka-server
    ports:
      - "8766:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  auth-service:
    image: registry.gitlab.com/hamdane10/you-scout/auth-service:1.0
    container_name: auth-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_PASSWORD=9wSMIG4PtuV9RUczvLfF1RG8F
      - DB_USERNAME=you-scout
      - MAIL_PASSWORD=76b4a8579a5cb7
      - MAIL_USERNAME=3dcbd0fac10a20
      - OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID=280865825518-e0i48siieffqr99cuqt7nlm58bcogog6.apps.googleusercontent.com
      - OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET=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
      - AWS_ACCESS_KEY=AKIAYCCX5HLQIB4PMNPI
      - AWS_SECRET_KEY=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
      - AWS_REGION_STATIC=eu-west-3
      - AWS_S3_BUCKET=you-scout-media
    networks:
      - spring
      - postgres
      - kafkaStream

  social-graph-service:
    image: registry.gitlab.com/hamdane10/you-scout/social-graph-service:3.9
    container_name: social-graph-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_NEO4J_USERNAME=neo4j
      - SPRING_NEO4J_PASSWORD=you-scout-project
    networks:
      - spring
      - neo4jNetwork
      - kafkaStream

networks:
  postgres:
    driver: bridge

  kafkaStream:
    driver: bridge

  spring:
    driver: bridge

  neo4jNetwork:
    driver: bridge

volumes:
  postgresVolume:
  pgadminVolume:
  neo4jDbVol:
