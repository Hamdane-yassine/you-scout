default:
  tags:
    - Windows

stages:
  - scan
  - version
  - build
  - deploy

variables:
  VERSION_TAG: $CI_PIPELINE_IID
  VERSION_FILE: version.txt
  SERVICES: value
  variable_value: value
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

scan_code:
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/semgrep:latest
  stage: scan
  script:
    - semgrep --config auto -o gl-sast-report.json .
  artifacts:
    reports:
      sast: gl-sast-report.json


versioning:
  stage: version
  script:
    - variable_value=$CI_COMMIT_REF_NAME
    - echo "Variable value $variable_value"
    - IFS='-' read -ra words <<< "$variable_value"
    - word1="${words[0]}"
    - word2=$(echo "$variable_value" | cut -d'-' -f2-)
    - echo $word1
    - echo $word2
    - variable_name="${word1}-${word2}"
    - echo "$COMMENT_VERSION"
    - |
      case "$word2" in
        "auth-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$AUTH_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
          echo "major $MAJOR, minor $MINOR, patch $PATCH"
          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/AUTH_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        "social-graph-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$GRAPH_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            echo "I'm really in"
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
      
          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/GRAPH_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        "post-handling-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$POST_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            echo "I'm really in"
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
      
          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/POST_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        "user-feed-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$FEED_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            echo "I'm really in"
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
      
          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/FEED_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        "comments-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$COMMENT_VERSION"
          echo "$COMMENT_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            echo "I'm really in"
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
          echo "major $MAJOR, minor $MINOR, patch $PATCH"

          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/COMMENT_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        "skills-service")
          echo "I'm in"
          IFS='.' read -ra VERSION_ARRAY <<< "$SKILL_VERSION"
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          if [[ $word1 == "major" ]]; then
            echo "I'm really in"
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $word1 == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $word1 == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
      
          curl --request PUT --header "PRIVATE-TOKEN: glpat-rzjTbhoKA5VmBypsnB6n" "https://gitlab.com/api/v4/projects/44998572/variables/SKILL_VERSION" --form "value=$MAJOR.$MINOR.$PATCH"
          ;;
        *)
          echo "Invalid value or no matching case"
          ;;
      
      esac
  rules:
    - if: '$CI_COMMIT_TAG'



authentication-service-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd auth-service
    - export PACKAGE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/microservice/authentication
    - export VERSION=$AUTH_VERSION
  script: |
    mvn compile jib:build \
      -Djib.to.auth.username=${CI_REGISTRY_USER} \
      -Djib.to.auth.password=${CI_REGISTRY_PASSWORD} \
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "auth-service/target/*-reports/TEST-*.xml"
  cache:
    paths:
      - .m2/repository/
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /comments-service/'
    - changes:
      - comments-service/**/*

social-graph-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd social-graph-service
    - export VERSION=$GRAPH_VERSION
  script: |
    mvn compile jib:build \
    -Djib.to.auth.username=${CI_REGISTRY_USER} \
    -Djib.to.auth.password=${CI_REGISTRY_PASSWORD} \
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "post-handling-service/target/*-reports/TEST-*.xml"
  # artifacts:
  #   paths:
  #     - social-graph-service/target/*.jar
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - changes:
      - auth-service/**/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /auth-service/'

post-service-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd post-service
    - export VERSION=$POST_VERSION
  script: |
    mvn compile jib:build \
      -Djib.to.auth.username=${CI_REGISTRY_USER} \
      -Djib.to.auth.password=${CI_REGISTRY_PASSWORD} \
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "post-handling-service/target/*-reports/TEST-*.xml"
  # artifacts:
  #   paths:
  #     - post-service/target/*.jar.original
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - changes:
      - social-graph-service/**/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /social-graph-service/'

user-feed-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd user-feed-service
    - export VERSION=$FEED_VERSION
  script: |
    mvn compile jib:build \
      -Djib.to.auth.username=${CI_REGISTRY_USER} \
      -Djib.to.auth.password=${CI_REGISTRY_PASSWORD} \
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "user-feed-service/target/*-reports/TEST-*.xml"
  # artifacts:
  #   paths:
  #     - user-feed-service/target/*.jar
  cache:
    paths:
      - .m2/repository/
      - user-feed-service/target
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - changes:
      - user-feed-service/**/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /user-feed-service/'

comments-service-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd comments-service
    - echo "$COMMENT_VERSION"
    - export VERSION="$COMMENT_VERSION"
  script:
    - echo "$COMMENT_VERSION"
    - mvn compile jib:build -Djib.to.auth.username=$CI_REGISTRY_USER -Djib.to.auth.password=$CI_REGISTRY_PASSWORD -Djib.to.image=$CONTAINER_RELEASE_IMAGE
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository/
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "comments-service/target/*-reports/TEST-*.xml"
  # artifacts:
  #   paths:
  #     - comments-service/target/*.jar

  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - changes:
      - comments-service/**/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /comments-service/'

skills-service-build:
  image: maven:3.8.4-openjdk-17
  stage: build
  before_script:
    - cd skills-service
    - export VERSION=$SKILL_VERSION
  script:
    - mvn compile jib:build \
      -Djib.to.auth.username=${CI_REGISTRY_USER} \
      -Djib.to.auth.password=${CI_REGISTRY_PASSWORD} \
      -Djib.to.image=${CI_REGISTRY_IMAGE}
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository/
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "skills-service/target/*-reports/TEST-*.xml"
  # artifacts:
  #   paths:
  #     - skills-service/target/*.jar
  rules:
    # - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #   allow_failure: true
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    - changes:
      - skills-service/**/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /skills-service/'



auth_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/auth-service:'$AUTH_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/auth-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fauth-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - auth-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /auth-service/'

    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - auth-service/**/*
    - when: never
comment_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/comments-service:'$COMMENT_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/comments-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fcomments-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - comments-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /comments-service/'
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - comments-service/**/*
    - when: never
social_graph_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/social-graph-service:'$GRAPH_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/social-graph-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fsocial-graph-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - social-graph-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /social-graph-service/'
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - social-graph-service/**/*
    - when: never
post_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/post-handling-service:'$POST_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/post-handling-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fpost-handling-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - post-handling-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /post-handling-service/'
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - post-handling-service/**/*
    - when: never
feed_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/user-feed-service:'$FEED_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/user-feed-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fuser-feed-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - user-feed-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /user-feed-service/'
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - user-feed-service/**/*
    - when: never
skill_yaml:
  stage: deploy
  script: |
    sed -i 's|image:.*|image: registry.gitlab.com/hamdane10/you-scout/skills-service:'$SKILL_VERSION'|' k8s/auth-service1.yaml
    DECODED_CONTENT=$(cat k8s/skills-service.yaml)
    curl --request PUT --header "PRIVATE-TOKEN: glpat-yw5_V7QMKPXSt52tdx5B" "https://gitlab.com/api/v4/projects/44998572/repository/files/k8s%2Fskills-service%2Eyaml" --header "Content-Type: application/json" --data '{"branch": "master", "author_email": "aarrasseayoub@gmail.com", "author_name": "Ayoub AARRASSE", "content": "'"$DECODED_CONTENT"'", "commit_message": "update file"}'
  rules:
    - changes:
        - skills-service/*
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG =~ /skills-service/'
    # - if: '$CI_COMMIT_TAG =~ /auth-service/'
    # - changes:
    #   - skills-service/**/*
    - when: never
 


 





