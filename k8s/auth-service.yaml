VmpGYWIxRXlUa2RYYmxKWFltMTRjVlJYTVRSTmJHeDBZMGhhWVUxWGVGcFZWelZyWVcxV1ZXRXpiRlZXYTFveldUSXhSMWRGTlZoa1JrSm9WbFZ3UjFZeWVHOVJNazE1VTFod2FWTkdTbWhXYm5CV1pERkZlVTFJYUdsU01VcEpWVzB4TUZkc1pFZFRiVGxWVFcxU01sZHFRbk5UUlRWWVlVZHNWMDFXVlhsVk1WWnJVakF4V0ZWcmFHRk5NVXB4VkZkNFlVNVdjRWhOV0U1b1lraENVMWt3YUhkaGJFbDRWMjVHVlUxdFVqSlhha0p6VTFaT2RHVkhjRk5OTW1nelZqRlNTMUl5Vm5KUFdFSlNWMGRvUlZsV1ZrZGliR3cyVTJ4a2FrMVlRbGxXUjNCRFlWVXdkMkY2U2xKTmJYaERWMnBDYzFKR1JuVlZiSEJZVW10d2VGZFdWbGRPUjBaSFlraFNWMkpyTlhGYVZ6QTFWRVpPVmxSclNtRk5SM2hGVlZaa2ExZHNaRVpUYWs1VlRXMTRSRmxWWkZOWFZsWjBUMVV4V0ZKVVZucFhWRWt4V1ZkT1IyRXpiRmRXV0ZKTFZWUkNTbVF4WkhOWk0yaHJUV3R3U1ZWdGNFTlpWbHBJVDFWNFZGWlZOVU5YYWtKelUwVXhXR1ZIZEZOTlJuQjVWakZhYjFVeVJrWlBWelZwVFcxU1MxVlVRa2RpYkU1V1ZHdE9hazFYZUZsVk1qRTBZVlpPUmsxRVNsSk5iWGhEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVll4V205Uk1sRjNUMWhDVW1KWGFISldNRnBMWkd4U1IyRkZPV2xTTURVeFZqSTFRMWRyTVhOV2EzaFVWbFUxUTFkcVFuTlRWbEoxV2tkR1YwMUVRWGxWVkVwelVXeHZkMkpGVWxKV01sSkxWV3BCTVUxc2JIUk9WazVvVWpCYVdWUnNaRFJoYlVweVRVUktVazF0ZUVOWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVmtWYVQxRXlVbGRpUm1oT1ZqTm9VVmxXVmt0aU1YQkhZVVpPYVUxSWFGcFdSekUwWVcxS2MyTklaRmhXUlhCWFZYcENjMUpHUmxoYVJYQlNUVVZhZFZVeFZrOVJiRzkzWWtWb2FWTkdTbUZXYWtwVFl6RlJlV0pGVG14V2JrSlpWMnRvUTJGck1IaFRhbFpoVm1zd2VGbHRNVWRYVmxaMVZHeHdWMDFIZDNoV01WSktUbGRTUm1RemJHaFNNbWh3Vm1wR1MySXhiSFJOVmxwc1VsUkdSVlF4VWxkaFZUQjRWbXBDV21WcmNGQmFSekZUVjFaV1dWZHNjRTVoYlhkM1YxZDRhMVl5VWxoVmEyeFZWMFpLY1ZSWGVHRk9WbkJJVFZoT2FHSklRbFpaYWtvd1lrVXhSazVXUmxkU2JGWTBWVzE0VTJNeFZuUlhiR1JvVFZad1ZWWnNVa05qTVZaSFZXNVdUbEpZVWt0VlZFSkhZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNUa1pUYWtwYVRXcFdWRnBYY3pWaWJVbDVXa1Z3VWsxRlduVlZNVlpQVVd4dmQySkZVbEpXTWxKTFZWUkNSMDFHVGxaYVJUbHJZbFZ3TVZaWE1XOWhSbG8yVm01T1drMXVhRVJhUnpGUFpGWldWVmRyY0ZOU01sRjZWa1JDVTFOc1RYZGlSVkpTVmpKU1MxVlVRa2RpYkU1V1ZHdEtZVTFIZUVsV2JUVlhZVEpHZEU5VmVGUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVlV4Vms5UmJHOTNaVVpTVW1Kc1dtRldibkJIWXpGUmVXSkZUbGRTYkZwSVZUSjBkMVpYUlhsVmJURlhWbFp3VEZaVldrdGpiVXBHVFZaT1YyRjZWblJXVmxwWFZERmFWMVJzWkZoaE1YQkZXVlpXUjJKc1RsWlVhMHBoVFVkNFJWVldaR3RUYkVWM1VtMDFWRlpWTlVOWGFrcFRaRVpLZFZSdGRGZE5WbFY1VlRGV2ExVXlVbk5oTTJ4clVqTm9jVmRxU1RWaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnROVlJXVlRWRFdrVldjMU5GTlZoaFIyeFhUVlpWZVZVeFZsZFZNVVY0V2pOb1VtRXdjRmRVVmxVeFYxWmFSVkpyZEZOV1ZUVjNWVlprYTFOc1JYZFNiVFZVVmxVMVExZHFRbk5TUmtaWVdrVndVazFGV25WWGEyTjRVakpOZVZWc2FGZGhNbEp4V1d4U2MwMUdVWGxhU0ZwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlZwMVYxaHdTMVl5Um5SVWJsSlhZV3RLVlZSWGVGcE5WbHBZVFZaa2FWWlViSFZaYWtwclUyeEZkMUp0TlZSV1ZUVkRWMnBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbUpzV21GV2JuQkhZekZSZVdKRlRrOVdNR3cyVm14b1UyRnJNWEpPVkVwaFVtMW9VMXBGWkU1bFZscDBZMGR3YVZac2JETlZWRXB6VVd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVWEwcGhUVWQ0UlZWV1pHdFRiRVYzVW0wMVZGWlhVWGRaYTJSWFZsZEplVnBIY0ZObGJYY3lWMnRXYTJFeVZsZGpSbXhWVjBaS2NWVnFRbUZPYkd3MlZHMTBhMkpWTlRCV1ZsWXdVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVlpGV2s5Uk1sSlhZa1pvVGxZemFGRlpWbFpMVW14V1dHUjZWbGRpUmxZelZtMTRUMVpYUlhkWGF6bFdZa1ZhTWxkcVFuTlNSa1pZV2tWd1VrMUZXblZWTVZaUFVXeHZkMkpGVWxKV01sSkxWVEJhZDJJeGJISmhSbVJwVW10d01WVXlOV0ZoVmxwSVQxVjRWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVlRGV1QxRnNiM2RpUlZKU1ZqSlNTMVV3VlRGak1XUlZWR3QwYVZJeFNrZGFSV1EwWWtaYWNtTklUbGhpV0VJeVZYcENjMUpHUmxoYVJYQlNUVVZhZFZVeFZrOVJiRzkzWWtWU1VsWXlVa3RWVkVKSFlteE9WbFJyU21GTmEzQXdWVzAxVTFsV1draFBWelZoVm0xTk1WUldWalJYVmxKMFkwZHNUazFXYkROV1JWcHZWREpLUjJFemNGUmlXR2h5VlZaak5XSnNUbFpVYTBwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlhBMVZqSjRiMk5yTlhKaVJXeFNZbXh3Y1ZSVVJrdGtWbXQ1VFZaa2JHRXphRnBXYlRWM1dWWmtSbU5FUmxoV2JVNDBXV3RXVDJOR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbFl5VWt0VldIQkRZbXhzZEUxVlpHdFNia0pXV1dwS2ExWldXbFpYYTNSWFVsWnJNVlpXV2tkV01WSnpWV3hrVGxKSGVGVldWM1JIWkd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVWEwcGhUVWQ0UlZWV1pHdFRiRTVIWTBjNVdtRXlhRmhaYTFwTFpGWk9kVmR0YkZkU2VteE5WVEZXVDFGc2IzZGlSVkpTVmpKU1MxVlVRa2RpYkU1V1ZHdEtZVTFIZUVWVlZtUnJVMnhPUms1WVRsaFdSVFZNV1d0a1UxSnRVa2hsUjNoWFlUTkNlbFl5TVhka2JFMTNZa1ZTVWxZeVVrdFZWRUpIWW14T1ZsUnJTbUZOUjNoRlZWWmthMU5zUlhkU2JUVlVWbFUxUTFkcVNrdGtSa3AxVlcxR1YxSjZiSFZYYkZwcVRsVXhWbVZHYkZWaVdFSndWRlJHV21ReFVrZGhSVGxwVW0xME5sVXlNVFJoTVVaWVQxYzFWRlpWTlVOWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVlRGV1QxRnNiM2RpUlZKU1ZqSlNTMVZVUWt0bFZtUnpZVWhLVDJFeWVFbFVWbVJ2WVVaWmVscEVRbHBOUjFKSVdsY3hUbVZzY0VsWGJYQnBWbXRhVFZVeFZrOVJiRzkzWWtWU1VsWXlVa3RWVkVKSFlteE9WbFJyU21GTlNHaFZWVmMxVjFkc1dqWlNiazVWVFcxNFJGWkhlRWRXYlVwR1RWWnNUbFpzY0ZaV1YzaGhVekZSZUZKc1drNVdWbkJGV1ZaV1IySnNUbFpVYTBwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha3BUWkVaS2RWUnRkRmROVm5CSlYxUkpkMDVYVWtaUFZ6VnBUVzFTUzFWVVFrZGliRTVXVkd0S1lVMUhlRVZWVm1SclUyeEZkMUp0TlZSV1ZUVkRWMnBLVG1WV1duUmpSM0JwVm14c00xWlljRXRXTURWWFZtNVNWMkpVUmxGWGFrazFZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNSWGRTYlRWVVZsVTFRMWRxUW5OU1JrWllXa1Z3VWsxRmIzaFdNVnBxWlVkS1JrOVlRbEpoYkZwd1ZGUkdWMDFHYkRaVGF6bHJZbFpLV2xaV2FGTmhhekZ6VjI1R1drMXFSbGhVVlZaUFkwWkdXRnBGY0ZKTlJWcDFWVEZXVDFGc2IzZGlSVkpTVmpKU1MxVlVRa2RpYkU1V1ZHdEtZVTFIZUVsYVJXUTBZa1phU0U5WE5WcGlSMUpJV1RCa1MxSkZNVlZTYlhCT1lrWnZNVmRYTUhoU01sSkhZMFpLYVUxdFVrdFZWRUpIWW14T1ZsUnJTbUZOUjNoRlZWWmthMU5zUlhkU2FrSlVWbGROZUZsVlpFdFhSbHBWVjJ0d1UxWkhlRVJXYlhoaFZURk9WazFZVGxCV1ZrcFdWV3hrTkZJeFdraGxSazVoWWtaYWVWWnRkRzlXUmxweVRsWmFWMVl6VWtoV2JGcFBWbXM1Vms5V2JFNVNNVXBTVm10U1EyRXhVbGRUYkdSUVZsWktWbFZzWkRSU01WcElaVVpPWVdKRk5WZFdWbFl3VTJ4RmQxSnROVlJXVlRWRFYycENjMUpHUmxoYVJYQlNUVVZhZFZVeFZrOVJNREZ6WWtab2JGSkZXbWhXYkZwM1RsWnNjVk5ZWkU5aE1EVjNWVlprYTFOc1JYZFNiVFZVVmxVMVExZHFRbk5TUmtaWVdrVndVazFGV25WVk1WWlBVVEpXYzJOR2FGVmliWGhvVmpCYVMxUldaSE5oU0U1V1RWaENXVll4VW1GU1IwWldVbTAxVkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlZwMVZURldUMUZzYjNkaVJWSlNWakpTUzFWdWNGZGlNV3h6V2taYVQyRXllRXBaYTJoaFlURldObEpxV2xoV1JXc3hWRlprVTFKRk1WbGpSMFpYVFVSVk1WWXllRzlWYkUxM1lrVlNVbFl5VWt0VlZFSkhZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNSWGRTYlRWVVZsVTFRMWRxU2tabFZscHhWbXhDYUZaVmNERlhWM0JLVGxkS2RGTnJhRmRYUmtwaFZGYzFiMlF4WkhOWmVrWk9VbGhvV1ZsclpEQlNSMFpXVW0wMVZGWlZOVU5YYWtKelVrWkdXRnBGY0ZKTlJWcDFWVEZXVG1ReGIzbFRibEpUWW14S2FGWnJZelZpYkZwRlVXdGtWMkpHY0VkWGFrNXpWMVV4Ums1Vk5WWk5WbHBZVmtSR1lWSXdPVmRVYkU1WFZqRktURlpzVWtkVk1WVjRVbXhrVm1FelFsWlVWVkpYWWxaV2NWRlVWbFpTYTJ3eldsVldZVmRWTVVaT1ZUVldUVlphV0ZaRVJtRlNNRGxYVld4T1YxWlVWbFZXVjNoaFZXeE5kMkpGVWxKV01sSkxWVlJDUjJKc1RsWlVhMHBoVFVkNFJWVldaR3RUYkVWM1UxaHNXRlp0VVRCVVZscDNWbXhrZFdKSGJFNWhhMFY1VlZSS2MxRnNiM2RpUlZKU1ZqSlNTMVZVUWtkaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxTnFXbGhpUjFKUVdsWmFkMWRXVm5KbFIwWllVak5vVlZZeWVHdFhhelZ5Vkc1Q1VsWXlVa3RWVkVKSFlteE9WbFJyU21GTlIzaEZWVlprYTFOc1JYZFNiVFZVVmxVMVExZHFRbk5UUlRWWVlVZHNWMDFXVlhsVk1WWnZZekpTZEZWc1VrNVhTRUpoVkZkd2NtVkdjRVpVV0doc1lraENXVlpITlhOWlZtUkhVbXQ0VkZaVk5VTlhha0p6VWtaR1dGcEZjRkpOUlZwMVZURldUMUZzYjNkaVJWSlNWakpTUzFWVVFrZGliR3hWVTJ4a1QxWlViSGRWVnpBeFlWVXhjV0pJVmxwaE1sSlhXa1ZhY21WWFZrbFJiVVpYWld4V00xWkZXbTlVTWtwSFlUTndWR0pZYUhKVlZtTTFZbXhPVmxSclNtRk5SM2hGVlZaa2ExTnNSWGRTYlRWVVZsVTFRMXBGVm5OVFJUVllZVWRzVjAxV1ZYbFZNVlpYVWpGa1IxWllhRkJXVlhCVFZGVlZNVkl4V2xWU2F6bGhZa1V4TTFadGVIZFNSMFpXVW0wMVZGWlZOVU5YYWtKelVrWkdXRnBGY0ZKTlJWcDFWVEZXVDFGc2IzbFZibEpUWW1zMWNsWnFSbUZUUm10NVRVUldhMUpVYkhWWmFrcHJVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVlV4Vms5UmJHOTVWRmhzVjJKWVFuRlpiRnBhWkRGV05sTnNaRTlXYkZvd1ZtMHdlRlZHYjNsUFZ6VlVWbFUxUTFkcVFuTlNSa1pZV2tWd1VrMUZXblZWTVZaUFVXeHZkMkpGVWxKV01sSkxWVlJDUzAxV1pGZFpNMmhwVWxSc2QxVlhjRmRoVlRCNFZtcENXbVZyY0ZCYVJ6RlRWMVpXV1ZWdGNFNWlSbkI0VjFSSmVGWXdNVVpVYmtKU1ZqSlNTMVZVUWtkaWJFNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnROVlJXVlRWRFYycENjMU5IVWtobFIzaFhVbnBzZFZZeFdtOWhNbFp5WlVab1UySllRbUZVVjNoaFRteHJlbUV6YUdwaVNFSmFXVlJDTUZOc1JYZFNiVFZVVmxVMVExZHFRbk5TUmtaWVdrVndVazFGV25WV1JWcFBVVEpTVjJKR2FFNVdNMmhSV1ZaV1MxRXhXbFpYYTA1aFlrVmFlVlZ0ZUZOVk1WcHhZa1prVjFZelVYcFZla0p6VWtaR1dGcEZjRkpOUlZwMVZURldUMUZzYjNkaVJWSlNWakpTUzFWVVFrcGxWbVJYV2tSU1RsWnVRbGRXTWpWellWVXhjVkZVU2xKTmJYaERWMnBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbFl5VWt0VlZFSkxUbXhrYzFwRk9XeFdia0phVmxkME5GbFdaRWhsUmxKWVlrZFNZVlJ0ZEU5alJrWllXa1Z3VWsxRlduVlZNVlpQVVd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVWEwcGhUVWQ0U1ZSc1pHOWhWbGw0VmxSS1ZGWlhhSHBhUnpGVFZrVXhXV05HY0U1aGJYUTBWMnRXVG1WSFZuTmpSbWhWWW0xNGFGWXdXa2RVUms1V1ZHdEtZVTFIZUVWVlZtUnJVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbGhhUlhCU1RVVmFkVmRXVWt0V01EVldUMWhDVW1KWGFIRlZNRlpIVFVaa1dFMVZaR3hpU0VKVlZGWlNSMkZ0U2xsYVJYaFVWbFUxUTFkcVFuTlNSa1pZV2tWd1VrMUZXblZWTVZaUFVXeHZkMlZHVWxKaWJGcGhWbTV3UjJNeFVYbGlSVTVTWWtac05GWkhNV0ZXYXpGSFYydFdWMVl6VWxoV2JGcHVaREpTUmxkc2FGWldlbXgxVlRGV1QxRnNiM2RpUlZKU1ZqSlNTMVZVUWtkaWJFNVdWR3RLWVUxSGVFcFdNakZ2WVZaT1IxZHVUbFppVkZaTVdrY3hTMVpYU1hka1JYQlNUVVZhZFZVeFZrOVJiRzkzWWtWU1VsWXlVa3RWVkVKSFlteE9WbFJyU21GTlIzaEtWa2N4TkZkck1IZGpTRTVoVWxaWmQxbHJaRmRXTVU1MFpVZEdhR0pVYkUxVk1WWlBVV3h2ZDJKRlVsSldNbEpMVlZSQ1IySnNUbFpVYTBwaFRVZDRSVlZXWkd0VGJFVjNVbTAxV21KVVJraGFSVnAzVmxkSmVWcEhlRmRsYlhRMFZrVmFiMVF5Um5SVFdIQlhZV3RLVGxZd1ZURmpNV1JWVkd0MGFWSXhTa05aYWtwclUyeEZkMUp0TlZSV1ZUVkRWMnBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYkc5M1lrVlNVbUpyY0doV01HUjZUV3hPVmxwRlpFNU5helF4VkZab2QxbFdXWGRPVkZaWVlrZG9VMXBGWkVabFZscHhWbXRTYUZaVlduVlZNVlpQVVd4dmQySkZVbEpXTWxKTFZWUkNSMkpzVGxaVVdHUmhUV3R3TUZWdE5WTlpWbHBJVDFjMVZsWnNjSEpXYTFwdVpVWk9jbGRzVGs1U00yaFNWbXRrTTA1V1drZFhhMXBUWWtaYVZWWnNWWGhVUms1V1ZHdEtZVTFIZUVWVlZtUnJVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbkZUYkhCWFRUSmtORll5ZUZOa2JHOTRZMFpzVjFkR1NuSlVWM2hoVG14d1JsUllaR3hoTURWM1ZWWmthMU5zUlhkU2JUVlVWbFUxUTFkcVFuTlNSa1pZV2tWd1VtVnJTblZYVnpCNFVqSlNSMk5HVm1sTmJWSlRWbTB4VTFaV1pFVlNhelZzWWtka00xVXllR0ZWYXpGSlZXdGtWMkV3V2pKWGFrSnpVa1pHV0ZwRmNGSk5SVnAxVlRGV1QxRnNiM2RpUlZKU1ZqSlNTMVV3V25kaU1XeHlZVVprYVZKVWJIZFZWM0JYWVZVd2VGWnFRbHBsYTNCUVdrY3hVMWRXVmxsVmJXeFhUVlp3ZVZkV1dtdFNiRTEzVkc1Q1VsWXlVa3RWVkVKSFlteE9WbHBJVG10U2JYaFpWMnRrTkZac1RrZFhibkJhWVRGd1VGbHJXbkpsYkU1MFpVZDBWRkpVUVhsVlZFcHpVV3h2ZDJKRlVsSldNbEpMVlZSQ1IySnNVa2RVYTA1clZtMTRXVlJXWkRSVlIwWldVMnBXV0dKSFVuSlpNR1JPWld4V2RXSkhlRlpsYTFwNFYxUkplRlV5Vm5KVWJrSk9VMFpLVGxaV2FFTmlNV3QzV2toT1YwMVlRbHBWTWpWM1lVWmFObUpFUmxWTmJYaEVWRmR6ZUZWdFRrbFRiV2hYWld4YWVWWkVTbk5STVZwSFkwWnNWR0ZyY0c5V2FrRXhZekZGZVUxSWFHbFNNVXBKVlcweE1GZHNaRWRUYlRsVlRXMVNNbGRxUW5OVFJUVllZVWRzVjAxV1ZYbFZNVlpyVWpBeFdGVnJhR0ZOTVVweFZGZDRZVTVXY0VoTldFNW9Za2hDVTFrd2FIZGhiRWw0VjI1R1ZVMXRVakpYYWtKelUxWlNkR1ZIYkZOTlZuQjRWMnRXYWs1WFZsWlBWelZwVFcxU1MxVlVRa2RpYkdSWFlVVk9hMDFFYkhkVlZ6RnZZVEZrUjFOdVdsVlNiV2hRV1d0a1QyUldaSFZSYkhCT1lrWmFUVlV4Vms5Uk1sRjVVMWh3VkdGclNuRmFWekExVkVaT1ZsUnJTbUZOUjNoRlZGVmthMkZzVGtaalJFcGhVbGROTVZsWE1VcGxWMUkyVjJ0d1UySkZjRVpXYkZaSFpHeHZkMkpGVWxKV01sSkxWVlJDUzAweGJIRlVhM1JPVWxSc2QxVldVbE5VYkVwSVdrUldVazF0ZUVOWGFrSnpVa1pHV0ZwRmNGUlNhM0IyVjFSSmVHRXlTa2hWYTJSU1lteHdjVmx0ZUVaTmJFNVdWVzAxYTAxRWJFWlZNVlo2VUZFOVBRPT0=