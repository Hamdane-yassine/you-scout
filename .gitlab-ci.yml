stages:
  - build


variables:
  REGISTRY_USER: $CI_REGISTRY_USER
  RIGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  # SAST_IMAGE_SUFFIX: '-fips'
  VERSION_TAG: $CI_PIPELINE_IID
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  # MAVEN_OPTS: >-
  #   -Dhttps.protocols=TLSv1.2
  #   -Dmaven.repo.local=.m2/repository
  #   -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
  #   -Dorg.slf4j.simpleLogger.showDateTime=true
  #   -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true 
    -Pbuild-docker-image 

authentication-service-build:
  image: maven:3.9.1
  stage: build
  cache:
    key: "maven-$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository
  before_script:
    - cd auth-service
    - export PACKAGE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    # - export IMAGE_NAME=$CI_REGISTRY_IMAGE/microservice/authentication
    # - export IMAGE_TAG=1.3
  script:
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      junit:
        - "**/target/*-reports/TEST-*.xml"

# post-service-build:
#   maven-build:
#   image: maven:3-jdk-8
#   stage: build
#   script: "mvn package -B"
#   artifacts:
#     paths:
#       - target/*.jar

# docker-build:
#   stage: build
#   before_script:
#     - docker login -u dall49 -p $DOCKER_HUB_PASSWORD
#   script:
#     - docker build -t dall49/product-microservice:$TAG .
#     - docker push dall49/product-microservice:$TAG

# include:
#   - template: Security/SAST.gitlab-ci.yml
